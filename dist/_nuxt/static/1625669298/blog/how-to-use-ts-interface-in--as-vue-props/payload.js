__NUXT_JSONP__("/blog/how-to-use-ts-interface-in--as-vue-props", (function(a,b,c,d,e,f,g,h,i){return {data:[{document:{id:"YM10QhIAAC0AUCde",uid:"how-to-use-ts-interface-in--as-vue-props",url:a,type:"post_type",href:"https:\u002F\u002Fjsuu.cdn.prismic.io\u002Fapi\u002Fv2\u002Fdocuments\u002Fsearch?ref=YNa7LRIAACoAUJV-&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YM10QhIAAC0AUCde%22%29+%5D%5D",tags:[],first_publication_date:f,last_publication_date:f,slugs:["ts-interface-as-props-in-vue"],linked_documents:[],lang:"en-us",alternate_languages:[],data:{title:[{type:d,text:"TS Interface as props in Vue",spans:[]}],post_excerpt:[{type:b,text:"How to use TS interface in  as Vue props",spans:[]}],featured_img_link:{link_type:"Web",url:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1529101091764-c3526daf38fe?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=891&q=80"},categories:{link_type:"Document"},sticky_post:a,body:[{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"This is another TypeScript post for Vuejs users",spans:[]}]}},{slice_type:g,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"Interface",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Interface is like structure for Object. We can declare custom types in our project as Interfaces which can be organized in a file and folder (best practice).",spans:[{start:125,end:140,type:"strong"}]},{type:b,text:"Here is our sample Interface, this will hold value for Task",spans:[{start:55,end:59,type:e}]}]}},{slice_type:h,slice_label:a,items:[{}],primary:{cod_text_field:[{type:i,text:"\u002F\u002Ftypes\u002Findex.ts\nexport interface Task{\n    id: number,\n    title: string,\n    isdone: boolean\n}",spans:[]}]}},{slice_type:g,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"Defining props as custom type",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Using props as Object Vue let us use Interface as Type. We can't do it directly, instead Vue provide PropType. Let me show",spans:[{start:15,end:21,type:e},{start:101,end:110,type:e}]}]}},{slice_type:h,slice_label:a,items:[{}],primary:{cod_text_field:[{type:i,text:"import Vue, { PropType } from \"vue\";\nimport { Task } from \"@\u002FTypes\";\n\nconst editProp = Vue.extend({\n  props: {\n    task: {\n      type: Object as PropType\u003CTask\u003E,\n    },\n  },\n});\nexport default class EditDialog extends editProp {\n...\n}",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Using the PropType we specify the Interface\u002FType and that should work.",spans:[]}]}}]}}}],fetch:{},mutations:[]}}(null,"paragraph","paragraph_slice","heading1","em","2021-06-19T04:36:22+0000","heading_slice","code_slice","preformatted")));