__NUXT_JSONP__("/blog/work-with-prism-orm-in-nextjs", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{document:{id:"YQC6fhIAACwATcwY",uid:i,url:a,type:"post_type",href:"https:\u002F\u002Fjsuu.cdn.prismic.io\u002Fapi\u002Fv2\u002Fdocuments\u002Fsearch?ref=YQC6mxIAACgATcyc&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YQC6fhIAACwATcwY%22%29+%5D%5D",tags:["nextjs","Prisma"],first_publication_date:j,last_publication_date:j,slugs:[i],linked_documents:[],lang:k,alternate_languages:[],data:{title:[{type:g,text:"Work with Prism ORM in Nextjs",spans:[]}],post_excerpt:[{type:b,text:"How to quickly and easily setup Prism ORM with Database in Nextjs",spans:[]}],featured_img_link:{link_type:"Web",url:"https:\u002F\u002Fi.ytimg.com\u002Fvi\u002F9qJKmesjTd8\u002Fmaxresdefault.jpg"},categories:{id:"YNawphIAAC4AUGic",type:"post_category",tags:[],slug:l,lang:k,first_publication_date:m,last_publication_date:m,uid:l,link_type:"Document",isBroken:n},sticky_post:n,body:[{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Prisma is a ORM for JavaScript and Typescript, it let developers easily configure, create \u002F migrate databases using models. One of the cool feature I love mostly is that , it can be configured with  few CLI commands like init, migrate",spans:[{start:221,end:234,type:f}]}]}},{slice_type:o,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:g,text:"Setup Prisma",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"For initializing the Prisma install the developer dependency  npm i -d prisma and initialize prisma with ",spans:[{start:62,end:77,type:h}]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"npx prisma init",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"It will generate necessary files under Prisma folder, please open the file and configure database and models. For demonstration I have configured a Sqlite database, you can use other databases like mysql, postgres, Mongodb etc.",spans:[{start:39,end:45,type:f}]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"\u002F\u002Fschema.prisma\r\n\r\ndatasource db {\r\n  provider = \"sqlite\"\r\n  url      = \"file:.\u002Fdev.db\"\r\n}\r\n\r\ngenerator client {\r\n  provider = \"prisma-client-js\"\r\n}\r\n\r\nmodel Contact{\r\n  id String @id @default(uuid())\r\n  name String\r\n  email String\r\n}\r\n  ",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Note the id field in the model, it is a primary key and also auto filled by the uuid() function. One you done models go to generate the real database with migrate command",spans:[{start:9,end:11,type:f},{start:80,end:86,type:f},{start:155,end:170,type:h}]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"npx prisam migrate dev --name init",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"This will generate the tables using the models we defined, to make sure we can use the prisma studio which runs on the port 555, also a standalone studio app is available. ",spans:[]},{type:b,text:"In the future we can modify and rerun the migrate command for updating the tables, which will drop the tables and re-create for us.",spans:[{start:42,end:49,type:f}]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"\u002F\u002F run in new terminal\r\nnpmx prisma studio",spans:[]}]}},{slice_type:o,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:g,text:"Prisma Client",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"In the nextjs app we need the dependency @prisma\u002Fclient, let's add them to our project",spans:[]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"nmp i -s @prisma\u002Fclient",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"In our React file we can now create prisma object and call the fetch method which will get the data from database. Usually we done the fetching with getStaticProps method in React. ",spans:[]}]}},{slice_type:d,slice_label:a,items:[{}],primary:{cod_text_field:[{type:e,text:"\u002F\u002Findex.js\r\n\r\nexport async function getStaticProps() {\r\n  const contacts = await prisma.contact.findMany();\r\n  return {\r\n    props: {\r\n      initialContacts: contacts,\r\n    },\r\n  };\r\n}\r\n\r\nexport default function Home({initialContacts}) {\r\n const [contacts, setcontacts] = useState(initialContacts); \r\n....",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"In the similar way, Prisma can use be used in API or graphql end points too.",spans:[{start:20,end:27,type:h}]}]}}]}}}],fetch:{},mutations:[]}}(null,"paragraph","paragraph_slice","code_slice","preformatted","em","heading1","strong","work-with-prism-orm-in-nextjs","2021-07-28T02:02:03+0000","en-us","reactjs","2021-06-26T04:44:28+0000",false,"heading_slice")));