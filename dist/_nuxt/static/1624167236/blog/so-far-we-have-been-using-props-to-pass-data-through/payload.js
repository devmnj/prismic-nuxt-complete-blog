__NUXT_JSONP__("/blog/so-far-we-have-been-using-props-to-pass-data-through", (function(a,b,c,d,e,f,g,h,i){return {data:[{document:{id:"YM2C_hIAACsAUGei",uid:"so-far-we-have-been-using-props-to-pass-data-through",url:a,type:"post_type",href:"https:\u002F\u002Fjsuu.cdn.prismic.io\u002Fapi\u002Fv2\u002Fdocuments\u002Fsearch?ref=YM7SWhIAAC4AVipW&q=%5B%5B%3Ad+%3D+at%28document.id%2C+%22YM2C_hIAACsAUGei%22%29+%5D%5D",tags:[],first_publication_date:"2021-06-19T05:39:29+0000",last_publication_date:"2021-06-19T06:09:13+0000",slugs:["vuex-modules"],linked_documents:[],lang:"en-us",alternate_languages:[],data:{title:[{type:d,text:"Vuex modules",spans:[]}],post_excerpt:[{type:b,text:"How to create vuex modules",spans:[]}],featured_img_link:{link_type:"Web",url:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1621361365424-06f0e1eb5c49?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=80"},category:{link_type:"Document"},sticky_post:a,body:[{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"So far We have been using props to pass data through parent child chain in our vuejs apps. This can be still working, we can do these data transactions and state management in a much easier way.",spans:[]},{type:b,text:"This is tutorial uses Typescript",spans:[]}]}},{slice_type:e,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"Vuex Store Modules",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Vuex store can be organized as modules, so that we can organize the data in a better way.Each module has its own state, mutations, actions and getters. Each state should have a type.",spans:[]}]}},{slice_type:e,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"Products Module and interfaces",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"First up all create types for our state. The state is a indented to store values (array), so we have to define two types, one for state variable and another for array type.",spans:[]}]}},{slice_type:f,slice_label:a,items:[{}],primary:{cod_text_field:[{type:g,text:"export interface productState {\n    products: Product\\[\\];\n}\n\nexport interface Product {\n    id: number;\n    product: string;\n    pk: string;\n    mfr: string;\n    hsn?: string;\n    ts: number;\n} ",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"export interface productState {     products: Product[]; }",spans:[]},{type:b,text:"export interface Product {     id: number;     product: string;     pk: string;     mfr: string;     hsn?: string;     ts: number; } ",spans:[]}]}},{slice_type:f,slice_label:a,items:[{}],primary:{cod_text_field:[{type:g,text:"import {productState} from '..\u002Ftypes'\nconst state: productState={\nproducts: \\[{id:101,product:'SR TAB',mfr:'LAB',pk:'10s',ts:12},\n{ id: 102, product: 'CIPLA DINE TUBE', mfr: 'CIPLA', pk: '1ml', ts: 18,hsn:'2003' },\n{ id: 103, product: 'CIPLA TONE', mfr: 'CIPLA', pk: '200gm', ts: 12, hsn: '2004' },\n\\]\n} \nconst getters={\n    products(state: productState){\n       return state.products;\n    }\n}\nexport const productMaster= {\n    namespaced: true,\n    state,\n    getters\n}",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"Using the type ProductState we store the state and have one getter function for accessing the state variable.",spans:[{start:15,end:46,type:h}]}]}},{slice_type:e,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"Import the modules",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"In our main store file (index) we have to import the module as follows.",spans:[]}]}},{slice_type:f,slice_label:a,items:[{}],primary:{cod_text_field:[{type:g,text:"import {productMaster} from '.\u002FproductMaster'\n....\n\n  const Store = new Vuex.Store({\n    modules: {\n       productMaster\n    },",spans:[]}]}},{slice_type:e,slice_label:a,items:[{}],primary:{header_rich_text_field:[{type:d,text:"How to invoke getters",spans:[]}]}},{slice_type:c,slice_label:a,items:[{}],primary:{paragraph_rich_text_field:[{type:b,text:"To call the getter functions in a component\u002Fpsge, we have to specify the module name and then the getter name.",spans:[{start:73,end:84,type:i},{start:98,end:109,type:i}]},{type:b,text:"this.$store.getters['productMaster\u002Fproducts'];",spans:[]},{type:b,text:"The above statement will invoke the product getter in the module productMaster. We can create as many module our app required.",spans:[{start:65,end:78,type:h}]}]}}]}}}],fetch:{},mutations:[]}}(null,"paragraph","paragraph_slice","heading1","heading_slice","code_slice","preformatted","em","strong")));